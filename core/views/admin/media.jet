<form method="POST" enctype="multipart/form-data" action="/admin/medias?redirect=true">
  <div class="f fc">
    <input id="input-file" type="file" name="medias" multiple hidden="hidden">
    <button id="input-file-decoy" type="button" class="button button--blue"><i data-feather="upload"></i>Upload</button>
  </div>
  <input type="submit" class="button button--rounded button--regular hidden" hidden="hidden">
</form>

<br>

<div class="core-media-panel f fic">
  <span id="media-count">0</span>&nbsp;Selected &nbsp;&nbsp;
  <button id="media-delete-button" class="feather-small button button--red button--rounded button--small" type="button"><i data-feather="trash"></i></button>
</div>
<br>

<div class="core-media-list">
  {{ range Medias }}
  <figure class="core-media-list__item">
    <label class="core-media-list__item__image" for="checkbox-{{ .Name }}" style="background-image: url(/{{ Constants.MediaThumbnailDir }}/{{ .Name }}.jpg) ;"></label>
    <div class="core-media-infos f fsb">
      <input id="checkbox-{{ .Name }}" class="core-media-checkbox" type="checkbox" data-name="{{ .Name }}{{ .Ext }}">
      <a href="/{{ Constants.MediaDir }}/{{ .Name }}{{ .Ext }}" class="feather-small button--icon" target="_blank"><i data-feather="airplay"></i></a>
      <input type=text class="core-media-infos__input core-input-text fg" value="{{ .Name }}" data-name="{{ .Name }}" data-ext="{{ .Ext }}">
      <button class="core-media-infos__save feather-small button--icon" type="button"><i data-feather="save"></i></button>
    </div>
  </figure>
  {{ end }}
</div>

<script>
// Input file
var __input_file = document.getElementById('input-file');
var __input_file_decoy = document.getElementById('input-file-decoy');
__input_file_decoy.addEventListener("click", function() { __input_file.click(); });
__input_file.addEventListener("change", function() {
  if (__input_file.value) {
    __input_file.form.submit();  
  }
});

var __core_media_checked = new Set();
var __core_media_countEl = document.getElementById('media-count');
var __core_media_deleteEl = document.getElementById('media-delete-button');

// Checkboxes
document.querySelectorAll('.core-media-checkbox').forEach(function(checkbox){
  checkbox.addEventListener('change', function(e){
    if (checkbox.checked) {
      __core_media_checked.add(checkbox.dataset.name);
    } else {
      __core_media_checked.delete(checkbox.dataset.name);
    }
    __core_media_countEl.innerText = __core_media_checked.size.toString();
  })
});

// Delete
__core_media_deleteEl.addEventListener('click', function(){
  if (__core_media_checked.size > 0) {
    OpenCoreModalConfirm("Confirm deletion ?", function(){
      fetch(document.location.origin + BASE_URL + '/medias', {
        method: 'DELETE',
        headers: new Headers({"Content-type": "application/x-www-form-urlencoded;charset=UTF-8"}),
        body: 'medias=' + encodeURIComponent(Array.from(__core_media_checked).join(','))
      }).then(function(res) {
        location.reload()
      })

    });
  }
})

// Rename
document.querySelectorAll('.core-media-infos__save').forEach(function(button) {
  button.addEventListener('click', function(e){
    var input = button.previousElementSibling;
    fetch(document.location.origin + BASE_URL + '/medias/' + input.dataset.name + input.dataset.ext, {
        method: 'PATCH',
        headers: new Headers({"Content-type": "application/x-www-form-urlencoded;charset=UTF-8"}),
        body: 'new_name=' + encodeURIComponent(input.value + input.dataset.ext)
      }).then(function(res) {
        input.dataset.name = input.value;
        CoreNotificationNotify();
      });
  })
});

</script>